//// COMPUTE THE BITWISE EXCLUSIVE OR.
function Sys.xor 0
    push argument 0
    push argument 1
    not
    and       // x AND (NOT y)

    push argument 0
    not
    push argument 1
    and       // (NOT x) AND y

    or        // combine both parts
    return

//// SHIFT A VALUE LEFT BY REPEATED ADDITION.
function Sys.shiftLeft 2
    push argument 0
    pop local 0

    push argument 1
    pop local 1

label SHIFT_LOOP
    push local 1
    push constant 0
    eq
    if-goto DONE

    push local 0
    push local 0
    add
    pop local 0

    push local 1
    push constant 1
    sub
    pop local 1

    goto SHIFT_LOOP

label DONE
    push local 0
    return

//// COMPUTE THE PARITY OF THE BOTTOM 15 BITS OF AN INTEGER.
function Sys.computeParity 0
    push argument 0
    pop local 0

    push constant 0
    pop local 1

    push constant 0
    pop temp 0

label LOOP
    push temp 0
    push constant 15
    eq
    if-goto END

    push constant 1
    push temp 0
    call Sys.shiftLeft 2

    push local 0
    and

    push constant 0
    eq
    not
    if-goto TOGGLE

    goto NEXT

label TOGGLE
    push local 1
    push constant 1
    call Sys.xor 2
    pop local 1

label NEXT
    push temp 0
    push constant 1
    add
    pop temp 0

    goto LOOP

label END
    push local 1
    return

//// SET LEFT-MOST BIT TO PARITY BIT.
function Sys.encode 0
    push constant 0
    push constant 15
    call Sys.shiftLeft 2
    not
    push argument 0
    and
    pop local 0

    push argument 0
    call Sys.computeParity 1
    pop local 1

    push local 1
    push constant 0
    eq
    if-goto RETURN_ZERO

    push local 0
    push constant 0
    push constant 15
    call Sys.shiftLeft 2
    or
    goto END

label RETURN_ZERO
    push local 0

label END
    return

//// INITIALISE SYSTEM
function Sys.init 0
    push constant 31
    call Sys.encode 1

label LOOP
    goto LOOP